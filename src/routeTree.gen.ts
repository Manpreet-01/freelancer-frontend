/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SearchJobsLazyImport = createFileRoute('/search-jobs')()
const RegisterLazyImport = createFileRoute('/register')()
const NotfoundLazyImport = createFileRoute('/notfound')()
const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ProfileIndexLazyImport = createFileRoute('/profile/')()
const ProfileUsernameLazyImport = createFileRoute('/profile/$username')()
const searchSearchLazyImport = createFileRoute('/(search)/search')()
const jobsJobsIndexLazyImport = createFileRoute('/(jobs)/jobs/')()
const jobsJobidLazyImport = createFileRoute('/(jobs)/job/$_id')()
const jobsJobPostIndexLazyImport = createFileRoute('/(jobs)/job/post/')()
const jobsJobEditidLazyImport = createFileRoute('/(jobs)/job/edit/$_id')()

// Create/Update Routes

const SearchJobsLazyRoute = SearchJobsLazyImport.update({
  path: '/search-jobs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search-jobs.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const NotfoundLazyRoute = NotfoundLazyImport.update({
  path: '/notfound',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notfound.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProfileIndexLazyRoute = ProfileIndexLazyImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/index.lazy').then((d) => d.Route))

const ProfileUsernameLazyRoute = ProfileUsernameLazyImport.update({
  path: '/profile/$username',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/profile/$username.lazy').then((d) => d.Route),
)

const searchSearchLazyRoute = searchSearchLazyImport
  .update({
    path: '/search',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(search)/search.lazy').then((d) => d.Route))

const jobsJobsIndexLazyRoute = jobsJobsIndexLazyImport
  .update({
    path: '/jobs/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(jobs)/jobs/index.lazy').then((d) => d.Route))

const jobsJobidLazyRoute = jobsJobidLazyImport
  .update({
    path: '/job/$_id',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(jobs)/job/$_id.lazy').then((d) => d.Route))

const jobsJobPostIndexLazyRoute = jobsJobPostIndexLazyImport
  .update({
    path: '/job/post/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(jobs)/job/post/index.lazy').then((d) => d.Route),
  )

const jobsJobEditidLazyRoute = jobsJobEditidLazyImport
  .update({
    path: '/job/edit/$_id',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(jobs)/job/edit/$_id.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/notfound': {
      id: '/notfound'
      path: '/notfound'
      fullPath: '/notfound'
      preLoaderRoute: typeof NotfoundLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/search-jobs': {
      id: '/search-jobs'
      path: '/search-jobs'
      fullPath: '/search-jobs'
      preLoaderRoute: typeof SearchJobsLazyImport
      parentRoute: typeof rootRoute
    }
    '/(search)/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof searchSearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(jobs)/job/$_id': {
      id: '/job/$_id'
      path: '/job/$_id'
      fullPath: '/job/$_id'
      preLoaderRoute: typeof jobsJobidLazyImport
      parentRoute: typeof rootRoute
    }
    '/(jobs)/jobs/': {
      id: '/jobs/'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof jobsJobsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(jobs)/job/edit/$_id': {
      id: '/job/edit/$_id'
      path: '/job/edit/$_id'
      fullPath: '/job/edit/$_id'
      preLoaderRoute: typeof jobsJobEditidLazyImport
      parentRoute: typeof rootRoute
    }
    '/(jobs)/job/post/': {
      id: '/job/post/'
      path: '/job/post'
      fullPath: '/job/post'
      preLoaderRoute: typeof jobsJobPostIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  LoginLazyRoute,
  NotfoundLazyRoute,
  RegisterLazyRoute,
  SearchJobsLazyRoute,
  searchSearchLazyRoute,
  ProfileUsernameLazyRoute,
  ProfileIndexLazyRoute,
  jobsJobidLazyRoute,
  jobsJobsIndexLazyRoute,
  jobsJobEditidLazyRoute,
  jobsJobPostIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/notfound",
        "/register",
        "/search-jobs",
        "/search",
        "/profile/$username",
        "/profile/",
        "/job/$_id",
        "/jobs/",
        "/job/edit/$_id",
        "/job/post/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/notfound": {
      "filePath": "notfound.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/search-jobs": {
      "filePath": "search-jobs.lazy.tsx"
    },
    "/search": {
      "filePath": "(search)/search.lazy.tsx"
    },
    "/profile/$username": {
      "filePath": "profile/$username.lazy.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.lazy.tsx"
    },
    "/job/$_id": {
      "filePath": "(jobs)/job/$_id.lazy.tsx"
    },
    "/jobs/": {
      "filePath": "(jobs)/jobs/index.lazy.tsx"
    },
    "/job/edit/$_id": {
      "filePath": "(jobs)/job/edit/$_id.lazy.tsx"
    },
    "/job/post/": {
      "filePath": "(jobs)/job/post/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
